{"ast":null,"code":"var _jsxFileName = \"/home/agustina/Descargas/catan/src/components/Settlement.jsx\";\nimport React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport getVertex from \"../Vertex\";\nimport CatanTypes from \"../CatanTypes\";\nimport api from \"../Api\";\nimport GameContext, { DEFAULT } from \"../GameContext\"; // TODO: Unit param should probably come from an upper global config state\n\nexport default function Settlement({\n  position,\n  unit = 256,\n  isCity,\n  colour,\n  username,\n  canUpgrade\n}) {\n  const _useContext = useContext(GameContext),\n        phase = _useContext.phase,\n        gameId = _useContext.gameId,\n        showModal = _useContext.showModal;\n\n  const isValidPhase = [DEFAULT].includes(phase);\n  const enabled = canUpgrade && isValidPhase;\n\n  const tryUpgrade = () => {\n    if (enabled) {\n      const disabled = false;\n      const title = \"Upgrade City\";\n      const body = \"It will cost you 3 ore and 2 grain. Are you sure you want to upgrade it?\";\n      const buttons = [{\n        text: \"Accept\",\n        primary: true,\n        callback: () => api.games.playAction(gameId, \"upgrade_city\", position)\n      }, {\n        text: \"Cancel\"\n      }];\n      showModal({\n        disabled,\n        title,\n        body,\n        buttons\n      });\n    }\n  };\n\n  const center = getVertex(position.level, position.index, unit);\n  return React.createElement(\"g\", {\n    className: \"settlement\",\n    onClick: tryUpgrade,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"circle\", {\n    cx: center.x,\n    cy: center.y,\n    r: isCity ? \"48px\" : \"32px\",\n    fill: colour,\n    stroke: enabled ? \"#E91E63\" : \"white\",\n    strokeWidth: \"10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"text\", {\n    x: center.x,\n    y: center.y + 3 // HACK: +3 seems to center the sans-serif font\n    ,\n    dominantBaseline: \"middle\",\n    textAnchor: \"middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, position.index));\n}\nSettlement.propTypes = {\n  position: CatanTypes.VertexPosition.isRequired,\n  unit: PropTypes.number,\n  isCity: PropTypes.bool.isRequired,\n  colour: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n  canUpgrade: PropTypes.bool.isRequired\n};\nSettlement.defaultProps = {\n  unit: 256\n};\nexport function BuildIndicator({\n  position,\n  unit = 256\n}) {\n  const _useContext2 = useContext(GameContext),\n        phase = _useContext2.phase,\n        gameId = _useContext2.gameId,\n        showModal = _useContext2.showModal;\n\n  const validPhase = [DEFAULT].includes(phase);\n  const enabled = validPhase;\n\n  const doBuild = () => {\n    const disabled = false;\n    const title = \"Build Settlement\";\n    const body = \"It will cost you 1 brick, 1 lumber, 1 wool and 1 grain. Are you sure you want to build it?\";\n    const buttons = [{\n      text: \"Accept\",\n      primary: true,\n      callback: () => api.games.playAction(gameId, \"build_settlement\", position)\n    }, {\n      text: \"Cancel\"\n    }];\n    showModal({\n      disabled,\n      title,\n      body,\n      buttons\n    });\n  };\n\n  const center = getVertex(position.level, position.index, unit);\n  const radius = enabled ? \"48px\" : \"0px\";\n  return React.createElement(\"circle\", {\n    className: \"build-indicator\",\n    onClick: doBuild,\n    cx: center.x,\n    cy: center.y,\n    r: radius,\n    fill: \"transparent\",\n    stroke: \"#E91E63\",\n    strokeWidth: \"10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  });\n}\nBuildIndicator.propTypes = {\n  position: CatanTypes.VertexPosition.isRequired,\n  unit: PropTypes.number\n};\nBuildIndicator.defaultProps = {\n  unit: 256\n};","map":{"version":3,"sources":["/home/agustina/Descargas/catan/src/components/Settlement.jsx"],"names":["React","useContext","PropTypes","getVertex","CatanTypes","api","GameContext","DEFAULT","Settlement","position","unit","isCity","colour","username","canUpgrade","phase","gameId","showModal","isValidPhase","includes","enabled","tryUpgrade","disabled","title","body","buttons","text","primary","callback","games","playAction","center","level","index","x","y","propTypes","VertexPosition","isRequired","number","bool","string","defaultProps","BuildIndicator","validPhase","doBuild","radius"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport getVertex from \"../Vertex\";\nimport CatanTypes from \"../CatanTypes\";\nimport api from \"../Api\";\nimport GameContext, { DEFAULT } from \"../GameContext\";\n\n// TODO: Unit param should probably come from an upper global config state\nexport default function Settlement({\n  position,\n  unit = 256,\n  isCity,\n  colour,\n  username,\n  canUpgrade\n}) {\n  const { phase, gameId, showModal } = useContext(GameContext);\n  const isValidPhase = [DEFAULT].includes(phase);\n  const enabled = canUpgrade && isValidPhase;\n  const tryUpgrade = () => {\n    if (enabled) {\n      const disabled = false;\n      const title = \"Upgrade City\";\n      const body =\n        \"It will cost you 3 ore and 2 grain. Are you sure you want to upgrade it?\";\n      const buttons = [\n        {\n          text: \"Accept\",\n          primary: true,\n          callback: () => api.games.playAction(gameId, \"upgrade_city\", position)\n        },\n        {\n          text: \"Cancel\"\n        }\n      ];\n      showModal({ disabled, title, body, buttons });\n    }\n  };\n  const center = getVertex(position.level, position.index, unit);\n  return (\n    <g className=\"settlement\" onClick={tryUpgrade}>\n      <circle\n        cx={center.x}\n        cy={center.y}\n        r={isCity ? \"48px\" : \"32px\"}\n        fill={colour}\n        stroke={enabled ? \"#E91E63\" : \"white\"}\n        strokeWidth=\"10\"\n      />\n      <text\n        x={center.x}\n        y={center.y + 3} // HACK: +3 seems to center the sans-serif font\n        dominantBaseline=\"middle\"\n        textAnchor=\"middle\"\n      >\n        {position.index}\n      </text>\n    </g>\n  );\n}\n\nSettlement.propTypes = {\n  position: CatanTypes.VertexPosition.isRequired,\n  unit: PropTypes.number,\n  isCity: PropTypes.bool.isRequired,\n  colour: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n  canUpgrade: PropTypes.bool.isRequired\n};\n\nSettlement.defaultProps = {\n  unit: 256\n};\n\nexport function BuildIndicator({ position, unit = 256 }) {\n  const { phase, gameId, showModal } = useContext(GameContext);\n  const validPhase = [DEFAULT].includes(phase);\n  const enabled = validPhase;\n  const doBuild = () => {\n    const disabled = false;\n    const title = \"Build Settlement\";\n    const body =\n      \"It will cost you 1 brick, 1 lumber, 1 wool and 1 grain. Are you sure you want to build it?\";\n    const buttons = [\n      {\n        text: \"Accept\",\n        primary: true,\n        callback: () =>\n          api.games.playAction(gameId, \"build_settlement\", position)\n      },\n      {\n        text: \"Cancel\"\n      }\n    ];\n    showModal({ disabled, title, body, buttons });\n  };\n\n  const center = getVertex(position.level, position.index, unit);\n  const radius = enabled ? \"48px\" : \"0px\";\n  return (\n    <circle\n      className=\"build-indicator\"\n      onClick={doBuild}\n      cx={center.x}\n      cy={center.y}\n      r={radius}\n      fill=\"transparent\"\n      stroke=\"#E91E63\"\n      strokeWidth=\"10\"\n    />\n  );\n}\n\nBuildIndicator.propTypes = {\n  position: CatanTypes.VertexPosition.isRequired,\n  unit: PropTypes.number\n};\n\nBuildIndicator.defaultProps = {\n  unit: 256\n};\n"]},"metadata":{},"sourceType":"module"}