{"ast":null,"code":"import _slicedToArray from \"/home/agustina/Descargas/catan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/agustina/Descargas/catan/src/components/ResourceList.jsx\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport _ from \"lodash\";\nimport { useToasts } from \"react-toast-notifications\";\nimport PropTypes from \"prop-types\";\nimport GameContext from \"../GameContext\";\nimport CatanTypes from \"../CatanTypes\";\nimport api from \"../Api\";\nimport { ReactComponent as BrickIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../public/icons/brick.svg\";\nimport { ReactComponent as WoolIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../public/icons/sheep.svg\";\nimport { ReactComponent as OreIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../public/icons/stone.svg\";\nimport { ReactComponent as LumberIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../public/icons/trees.svg\";\nimport { ReactComponent as GrainIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../public/icons/wheat.svg\"; // TODO: It would be nice to implement a custom hook like this\n// usePolling(async () => {\n//   const player = await api.games.player(gameId);\n//   setState({ resources: player.data.resources });\n// }, [gameId]);\n\nexport default function ResourceList() {\n  const _useContext = useContext(GameContext),\n        gameId = _useContext.gameId;\n\n  const _useState = useState({\n    resources: null\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        resources = _useState2[0].resources,\n        setState = _useState2[1];\n\n  const _useToasts = useToasts(),\n        addToast = _useToasts.addToast;\n\n  useEffect(() => {\n    const fetchResources = async () => {\n      const player = await api.games.player(gameId); // Get a dict with resources as keys and the ocurences as values\n\n      const newResourcesCount = _.countBy(player.data.resources);\n\n      const currResourcesCount = _.countBy(resources); // Check if it is necessary to update state\n\n\n      if (resources === null || // First render?\n      !_.isEqual(currResourcesCount, newResourcesCount) // Something changed?\n      ) {\n          // Merge both calculating the difference of old and new value\n          const resourceMerge = _.mergeWith(currResourcesCount, newResourcesCount, (currV, newV) => {\n            if (_.isNumber(currV) && _.isNumber(newV)) {\n              return newV - currV;\n            }\n\n            return _.isNumber(currV) ? currV : newV;\n          }); // Inform about resources that have gone up\n\n\n          const upResources = _.pickBy(resourceMerge, elem => elem > 0);\n\n          if (!_.isEmpty(upResources)) {\n            const succToastText = _.toPairs(upResources).map(elem => \"+\".concat(elem[1], \" \").concat(elem[0].toUpperCase(), \" \"));\n\n            addToast(succToastText, {\n              appearance: \"success\",\n              autoDismiss: true\n            });\n          } // Inform about resources that have gone down\n\n\n          const downResources = _.pickBy(resourceMerge, elem => elem < 0);\n\n          if (!_.isEmpty(downResources)) {\n            const warnToastText = _.toPairs(downResources).map(elem => \"\".concat(elem[1], \" \").concat(elem[0].toUpperCase(), \" \"));\n\n            addToast(warnToastText, {\n              appearance: \"error\",\n              autoDismiss: true\n            });\n          }\n\n          setState({\n            resources: player.data.resources\n          });\n        }\n    };\n\n    fetchResources();\n    const interval = setInterval(() => fetchResources(), api.POLL_EVERY);\n    return () => clearInterval(interval);\n  }, [addToast, gameId, resources]);\n  if (!resources) return React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Loading Resource List...\");\n  return React.createElement(ResourceListContainer, {\n    resources: resources,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  });\n}\nexport function ResourceListContainer({\n  resources\n}) {\n  const amounts = _.countBy(resources);\n\n  const resourcesData = {\n    brick: {\n      icon: React.createElement(BrickIcon, {\n        className: \"w-8 self-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }),\n      amount: amounts.brick || 0,\n      styleClasses: \"bg-red-800 text-orange-500 rounded-l-lg\"\n    },\n    lumber: {\n      icon: React.createElement(LumberIcon, {\n        className: \"w-8 self-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }),\n      amount: amounts.lumber || 0,\n      styleClasses: \"bg-green-900 text-green-500\"\n    },\n    grain: {\n      icon: React.createElement(GrainIcon, {\n        className: \"w-8 self-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }),\n      amount: amounts.grain || 0,\n      styleClasses: \"bg-yellow-500 text-yellow-900\"\n    },\n    ore: {\n      icon: React.createElement(OreIcon, {\n        className: \"w-8 self-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }),\n      amount: amounts.ore || 0,\n      styleClasses: \"bg-gray-700 text-gray-500\"\n    },\n    wool: {\n      icon: React.createElement(WoolIcon, {\n        className: \"w-8 self-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }),\n      amount: amounts.wool || 0,\n      styleClasses: \"bg-green-500 text-green-900 rounded-r-lg\"\n    }\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"flex flex-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, Object.keys(resourcesData).map(resource => React.createElement(\"li\", {\n    className: \"flex flex-col p-3 text-center \".concat(resourcesData[resource].styleClasses),\n    key: resource,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"flex w-10 h-10 justify-center py-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, resourcesData[resource].icon), React.createElement(\"span\", {\n    className: \"font-semibold text-xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, resourcesData[resource].amount)))));\n}\nResourceListContainer.propTypes = {\n  resources: PropTypes.arrayOf(CatanTypes.Resource).isRequired\n};","map":{"version":3,"sources":["/home/agustina/Descargas/catan/src/components/ResourceList.jsx"],"names":["React","useState","useEffect","useContext","_","useToasts","PropTypes","GameContext","CatanTypes","api","ResourceList","gameId","resources","setState","addToast","fetchResources","player","games","newResourcesCount","countBy","data","currResourcesCount","isEqual","resourceMerge","mergeWith","currV","newV","isNumber","upResources","pickBy","elem","isEmpty","succToastText","toPairs","map","toUpperCase","appearance","autoDismiss","downResources","warnToastText","interval","setInterval","POLL_EVERY","clearInterval","ResourceListContainer","amounts","resourcesData","brick","icon","amount","styleClasses","lumber","grain","ore","wool","Object","keys","resource","propTypes","arrayOf","Resource","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport _ from \"lodash\";\nimport { useToasts } from \"react-toast-notifications\";\nimport PropTypes from \"prop-types\";\n\nimport GameContext from \"../GameContext\";\nimport CatanTypes from \"../CatanTypes\";\nimport api from \"../Api\";\nimport { ReactComponent as BrickIcon } from \"../public/icons/brick.svg\";\nimport { ReactComponent as WoolIcon } from \"../public/icons/sheep.svg\";\nimport { ReactComponent as OreIcon } from \"../public/icons/stone.svg\";\nimport { ReactComponent as LumberIcon } from \"../public/icons/trees.svg\";\nimport { ReactComponent as GrainIcon } from \"../public/icons/wheat.svg\";\n\n// TODO: It would be nice to implement a custom hook like this\n// usePolling(async () => {\n//   const player = await api.games.player(gameId);\n//   setState({ resources: player.data.resources });\n// }, [gameId]);\n\nexport default function ResourceList() {\n  const { gameId } = useContext(GameContext);\n  const [{ resources }, setState] = useState({ resources: null });\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    const fetchResources = async () => {\n      const player = await api.games.player(gameId);\n\n      // Get a dict with resources as keys and the ocurences as values\n      const newResourcesCount = _.countBy(player.data.resources);\n      const currResourcesCount = _.countBy(resources);\n      // Check if it is necessary to update state\n      if (\n        resources === null || // First render?\n        !_.isEqual(currResourcesCount, newResourcesCount) // Something changed?\n      ) {\n        // Merge both calculating the difference of old and new value\n        const resourceMerge = _.mergeWith(\n          currResourcesCount,\n          newResourcesCount,\n          (currV, newV) => {\n            if (_.isNumber(currV) && _.isNumber(newV)) {\n              return newV - currV;\n            }\n            return _.isNumber(currV) ? currV : newV;\n          }\n        );\n\n        // Inform about resources that have gone up\n        const upResources = _.pickBy(resourceMerge, elem => elem > 0);\n        if (!_.isEmpty(upResources)) {\n          const succToastText = _.toPairs(upResources).map(\n            elem => `+${elem[1]} ${elem[0].toUpperCase()} `\n          );\n          addToast(succToastText, { appearance: \"success\", autoDismiss: true });\n        }\n\n        // Inform about resources that have gone down\n        const downResources = _.pickBy(resourceMerge, elem => elem < 0);\n        if (!_.isEmpty(downResources)) {\n          const warnToastText = _.toPairs(downResources).map(\n            elem => `${elem[1]} ${elem[0].toUpperCase()} `\n          );\n          addToast(warnToastText, { appearance: \"error\", autoDismiss: true });\n        }\n        setState({ resources: player.data.resources });\n      }\n    };\n    fetchResources();\n    const interval = setInterval(() => fetchResources(), api.POLL_EVERY);\n    return () => clearInterval(interval);\n  }, [addToast, gameId, resources]);\n\n  if (!resources) return <i>Loading Resource List...</i>;\n  return <ResourceListContainer resources={resources} />;\n}\n\nexport function ResourceListContainer({ resources }) {\n  const amounts = _.countBy(resources);\n  const resourcesData = {\n    brick: {\n      icon: <BrickIcon className=\"w-8 self-center\" />,\n      amount: amounts.brick || 0,\n      styleClasses: \"bg-red-800 text-orange-500 rounded-l-lg\"\n    },\n    lumber: {\n      icon: <LumberIcon className=\"w-8 self-center\" />,\n      amount: amounts.lumber || 0,\n      styleClasses: \"bg-green-900 text-green-500\"\n    },\n    grain: {\n      icon: <GrainIcon className=\"w-8 self-center\" />,\n      amount: amounts.grain || 0,\n      styleClasses: \"bg-yellow-500 text-yellow-900\"\n    },\n    ore: {\n      icon: <OreIcon className=\"w-8 self-center\" />,\n      amount: amounts.ore || 0,\n      styleClasses: \"bg-gray-700 text-gray-500\"\n    },\n    wool: {\n      icon: <WoolIcon className=\"w-8 self-center\" />,\n      amount: amounts.wool || 0,\n      styleClasses: \"bg-green-500 text-green-900 rounded-r-lg\"\n    }\n  };\n\n  return (\n    <div>\n      <ul className=\"flex flex-row\">\n        {Object.keys(resourcesData).map(resource => (\n          <li\n            className={`flex flex-col p-3 text-center ${resourcesData[resource].styleClasses}`}\n            key={resource}\n          >\n            <div className=\"flex w-10 h-10 justify-center py-3\">\n              {resourcesData[resource].icon}\n            </div>\n            <span className=\"font-semibold text-xl\">{resourcesData[resource].amount}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nResourceListContainer.propTypes = {\n  resources: PropTypes.arrayOf(CatanTypes.Resource).isRequired\n};\n"]},"metadata":{},"sourceType":"module"}