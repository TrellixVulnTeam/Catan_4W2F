{"ast":null,"code":"import _slicedToArray from \"/home/agustina/Descargas/catan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/agustina/Descargas/catan/src/components/CardList.jsx\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport _ from \"lodash\";\nimport GameContext from \"../GameContext\";\nimport { DEV_CARDS } from \"../CatanTypes\";\nimport DevelopmentCard from \"./DevelopmentCard\";\nimport api from \"../Api\";\n\nfunction CardList() {\n  const _useContext = useContext(GameContext),\n        gameId = _useContext.gameId;\n\n  const _useState = useState({\n    cards: null\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        cards = _useState2[0].cards,\n        setState = _useState2[1];\n\n  const amounts = _.countBy(cards);\n\n  useEffect(() => {\n    const fetchCards = async () => {\n      const player = await api.games.player(gameId);\n      setState({\n        cards: player.data.cards\n      });\n    };\n\n    fetchCards();\n    const interval = setInterval(() => fetchCards(), api.POLL_EVERY);\n    return () => clearInterval(interval);\n  }, [gameId]);\n  if (!cards) return React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Loading Card List...\");\n  return React.createElement(\"div\", {\n    className: \"self-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"flex flex-row justify-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, DEV_CARDS.map(cardType => React.createElement(DevelopmentCard, {\n    key: cardType,\n    cardType: cardType,\n    amount: amounts[cardType] || 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }))));\n}\n\nexport default CardList;","map":{"version":3,"sources":["/home/agustina/Descargas/catan/src/components/CardList.jsx"],"names":["React","useState","useEffect","useContext","_","GameContext","DEV_CARDS","DevelopmentCard","api","CardList","gameId","cards","setState","amounts","countBy","fetchCards","player","games","data","interval","setInterval","POLL_EVERY","clearInterval","map","cardType"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,GAAP,MAAgB,QAAhB;;AAEA,SAASC,QAAT,GAAoB;AAAA,sBACCN,UAAU,CAACE,WAAD,CADX;AAAA,QACVK,MADU,eACVA,MADU;;AAAA,oBAEYT,QAAQ,CAAC;AAAEU,IAAAA,KAAK,EAAE;AAAT,GAAD,CAFpB;AAAA;AAAA,QAETA,KAFS,iBAETA,KAFS;AAAA,QAEAC,QAFA;;AAGlB,QAAMC,OAAO,GAAGT,CAAC,CAACU,OAAF,CAAUH,KAAV,CAAhB;;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,UAAU,GAAG,YAAY;AAC7B,YAAMC,MAAM,GAAG,MAAMR,GAAG,CAACS,KAAJ,CAAUD,MAAV,CAAiBN,MAAjB,CAArB;AACAE,MAAAA,QAAQ,CAAC;AAAED,QAAAA,KAAK,EAAEK,MAAM,CAACE,IAAP,CAAYP;AAArB,OAAD,CAAR;AACD,KAHD;;AAIAI,IAAAA,UAAU;AACV,UAAMI,QAAQ,GAAGC,WAAW,CAAC,MAAML,UAAU,EAAjB,EAAqBP,GAAG,CAACa,UAAzB,CAA5B;AACA,WAAO,MAAMC,aAAa,CAACH,QAAD,CAA1B;AACD,GARQ,EAQN,CAACT,MAAD,CARM,CAAT;AAUA,MAAI,CAACC,KAAL,EAAY,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACZ,SACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,+BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,SAAS,CAACiB,GAAV,CAAcC,QAAQ,IACrB,oBAAC,eAAD;AACE,IAAA,GAAG,EAAEA,QADP;AAEE,IAAA,QAAQ,EAAEA,QAFZ;AAGE,IAAA,MAAM,EAAEX,OAAO,CAACW,QAAD,CAAP,IAAqB,CAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,CADF;AAaD;;AAED,eAAef,QAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport _ from \"lodash\";\n\nimport GameContext from \"../GameContext\";\nimport { DEV_CARDS } from \"../CatanTypes\";\nimport DevelopmentCard from \"./DevelopmentCard\";\nimport api from \"../Api\";\n\nfunction CardList() {\n  const { gameId } = useContext(GameContext);\n  const [{ cards }, setState] = useState({ cards: null });\n  const amounts = _.countBy(cards);\n\n  useEffect(() => {\n    const fetchCards = async () => {\n      const player = await api.games.player(gameId);\n      setState({ cards: player.data.cards });\n    };\n    fetchCards();\n    const interval = setInterval(() => fetchCards(), api.POLL_EVERY);\n    return () => clearInterval(interval);\n  }, [gameId]);\n\n  if (!cards) return <i>Loading Card List...</i>;\n  return (\n    <div className=\"self-center\">\n      <ul className=\"flex flex-row justify-between\">\n        {DEV_CARDS.map(cardType => (\n          <DevelopmentCard\n            key={cardType}\n            cardType={cardType}\n            amount={amounts[cardType] || 0}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default CardList;\n"]},"metadata":{},"sourceType":"module"}