{"ast":null,"code":"import _slicedToArray from \"/home/agustina/Descargas/catan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/agustina/Descargas/catan/src/components/DevelopmentCard.jsx\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport CatanTypes from \"../CatanTypes\";\nimport api from \"../Api\";\nimport GameContext, { DEFAULT, SET_PLAY_KNIGHT, SET_PLAY_ROAD_BUILDING } from \"../GameContext\";\nimport { ReactComponent as KnightIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../public/icons/knight.svg\";\nimport { ReactComponent as MonopolyIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../public/icons/monopoly.svg\";\nimport { ReactComponent as YearOfPlentyIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../public/icons/progress.svg\";\nimport { ReactComponent as VictoryPointIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../public/icons/trophy.svg\";\nimport { ReactComponent as RoadBuildingIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../public/icons/worker.svg\";\nexport default function DevelopmentCard({\n  cardType,\n  amount\n}) {\n  const _useContext = useContext(GameContext),\n        phase = _useContext.phase,\n        gameId = _useContext.gameId,\n        gameDispatch = _useContext.gameDispatch,\n        showModal = _useContext.showModal;\n\n  const validPhase = [DEFAULT].includes(phase);\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        canPlayCard = _useState2[0],\n        setCanPlayCard = _useState2[1];\n\n  const cardIcon = {\n    knight: React.createElement(KnightIcon, {\n      className: \"w-10 self-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }),\n    monopoly: React.createElement(MonopolyIcon, {\n      className: \"w-10 self-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }),\n    year_of_plenty: React.createElement(YearOfPlentyIcon, {\n      className: \"w-10 self-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }),\n    victory_point: React.createElement(VictoryPointIcon, {\n      className: \"w-10 self-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }),\n    road_building: React.createElement(RoadBuildingIcon, {\n      className: \"w-10 self-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })\n  };\n  const enabled = canPlayCard && validPhase;\n  useEffect(() => {\n    const fetchActions = async () => {\n      const _ref = await api.games.actions(gameId),\n            actions = _ref.data;\n\n      const playable = actions.some(a => a.type === \"play_\".concat(cardType, \"_card\"));\n      setCanPlayCard(playable);\n    };\n\n    fetchActions();\n    const interval = setInterval(() => fetchActions(), api.POLL_EVERY);\n    return () => clearInterval(interval);\n  }, [cardType, gameId]);\n\n  const readableType = _.startCase(cardType);\n\n  const tryPlay = () => {\n    let body;\n    let callback;\n\n    switch (cardType) {\n      case \"knight\":\n        body = \"Select where you want to move the robber.\";\n\n        callback = () => gameDispatch({\n          type: SET_PLAY_KNIGHT\n        });\n\n        break;\n\n      case \"road_building\":\n        body = \"Select up to two roads to build roads on.\";\n\n        callback = () => gameDispatch({\n          type: SET_PLAY_ROAD_BUILDING\n        });\n\n        break;\n\n      default:\n        body = \"Sorry, this feature is not yet implemented\";\n\n        callback = () => {};\n\n    }\n\n    showModal({\n      disabled: false,\n      title: \"Play \".concat(readableType),\n      body,\n      buttons: [{\n        text: \"Ok\",\n        callback\n      }]\n    });\n  };\n\n  return React.createElement(\"li\", {\n    className: \"bg-gray-800 rounded-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \" flex flex-col p-3 text-center text-gray-500 disabled:cursor-not-allowed disabled:opacity-50 hover:text-gray-200 rounded-lg\",\n    onClick: tryPlay,\n    disabled: !enabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"flex w-10 h-10 justify-center py-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, cardIcon[cardType]), React.createElement(\"span\", {\n    className: \"font-semibold text-xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, amount)));\n}\nDevelopmentCard.propTypes = {\n  cardType: CatanTypes.Card.isRequired,\n  amount: PropTypes.number.isRequired\n};","map":{"version":3,"sources":["/home/agustina/Descargas/catan/src/components/DevelopmentCard.jsx"],"names":["React","useState","useEffect","useContext","_","PropTypes","CatanTypes","api","GameContext","DEFAULT","SET_PLAY_KNIGHT","SET_PLAY_ROAD_BUILDING","DevelopmentCard","cardType","amount","phase","gameId","gameDispatch","showModal","validPhase","includes","canPlayCard","setCanPlayCard","cardIcon","knight","monopoly","year_of_plenty","victory_point","road_building","enabled","fetchActions","games","actions","data","playable","some","a","type","interval","setInterval","POLL_EVERY","clearInterval","readableType","startCase","tryPlay","body","callback","disabled","title","buttons","text","propTypes","Card","isRequired","number"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nimport CatanTypes from \"../CatanTypes\";\nimport api from \"../Api\";\nimport GameContext, {\n  DEFAULT,\n  SET_PLAY_KNIGHT,\n  SET_PLAY_ROAD_BUILDING\n} from \"../GameContext\";\nimport { ReactComponent as KnightIcon } from \"../public/icons/knight.svg\";\nimport { ReactComponent as MonopolyIcon } from \"../public/icons/monopoly.svg\";\nimport { ReactComponent as YearOfPlentyIcon } from \"../public/icons/progress.svg\";\nimport { ReactComponent as VictoryPointIcon } from \"../public/icons/trophy.svg\";\nimport { ReactComponent as RoadBuildingIcon } from \"../public/icons/worker.svg\";\n\nexport default function DevelopmentCard({ cardType, amount }) {\n  const { phase, gameId, gameDispatch, showModal } = useContext(GameContext);\n  const validPhase = [DEFAULT].includes(phase);\n  const [canPlayCard, setCanPlayCard] = useState(false);\n\n  const cardIcon = {\n    knight: <KnightIcon className=\"w-10 self-center\" />,\n    monopoly: <MonopolyIcon className=\"w-10 self-center\" />,\n    year_of_plenty: <YearOfPlentyIcon className=\"w-10 self-center\" />,\n    victory_point: <VictoryPointIcon className=\"w-10 self-center\" />,\n    road_building: <RoadBuildingIcon className=\"w-10 self-center\" />\n  };\n  const enabled = canPlayCard && validPhase;\n  useEffect(() => {\n    const fetchActions = async () => {\n      const { data: actions } = await api.games.actions(gameId);\n      const playable = actions.some(a => a.type === `play_${cardType}_card`);\n      setCanPlayCard(playable);\n    };\n    fetchActions();\n    const interval = setInterval(() => fetchActions(), api.POLL_EVERY);\n    return () => clearInterval(interval);\n  }, [cardType, gameId]);\n\n  const readableType = _.startCase(cardType);\n\n  const tryPlay = () => {\n    let body;\n    let callback;\n    switch (cardType) {\n      case \"knight\":\n        body = \"Select where you want to move the robber.\";\n        callback = () => gameDispatch({ type: SET_PLAY_KNIGHT });\n        break;\n      case \"road_building\":\n        body = \"Select up to two roads to build roads on.\";\n        callback = () => gameDispatch({ type: SET_PLAY_ROAD_BUILDING });\n        break;\n      default:\n        body = \"Sorry, this feature is not yet implemented\";\n        callback = () => {};\n    }\n    showModal({\n      disabled: false,\n      title: `Play ${readableType}`,\n      body,\n      buttons: [{ text: \"Ok\", callback }]\n    });\n  };\n\n  return (\n    <li className=\"bg-gray-800 rounded-lg\">\n      <button\n        type=\"button\"\n        className=\"\n          flex\n          flex-col\n          p-3\n          text-center\n          text-gray-500\n          disabled:cursor-not-allowed\n          disabled:opacity-50\n          hover:text-gray-200\n          rounded-lg\"\n        onClick={tryPlay}\n        disabled={!enabled}\n      >\n        <div className=\"flex w-10 h-10 justify-center py-3\">\n          {cardIcon[cardType]}\n        </div>\n        <span className=\"font-semibold text-xl\">{amount}</span>\n      </button>\n    </li>\n  );\n}\n\nDevelopmentCard.propTypes = {\n  cardType: CatanTypes.Card.isRequired,\n  amount: PropTypes.number.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}