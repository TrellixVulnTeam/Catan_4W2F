{"ast":null,"code":"import _defineProperty from \"/home/agustina/Descargas/catan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/agustina/Descargas/catan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/agustina/Descargas/catan/src/components/Game.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport \"../css/game.css\";\nimport React, { useState, useReducer } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { ToastProvider } from \"react-toast-notifications\";\nimport GameContext, { gameReducer, initGameState } from \"../GameContext\";\nimport GameStatus from \"./GameStatus\";\nimport Board from \"./Board\";\nimport CardList from \"./CardList\";\nimport ResourceList from \"./ResourceList\";\nimport BuyCard from \"./BuyCard\";\nimport { BankTradeButton } from \"./BankTrade\";\nimport DiceRoll from \"./DiceRoll\";\nimport EndTurn from \"./EndTurn\";\nimport Modal from \"./Modal\";\nimport WinGame from \"./WinGame\";\n\nfunction Game() {\n  // TODO: gameId must be a number. We could use regex /game/:gameId(//d+)\n  const _useParams = useParams(),\n        gameId = _useParams.gameId;\n\n  const _useReducer = useReducer(gameReducer, initGameState(gameId)),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        game = _useReducer2[0],\n        gameDispatch = _useReducer2[1];\n\n  const _useState = useState({\n    disabled: true,\n    title: \"\",\n    body: \"\",\n    buttons: [],\n    showCloseButton: true\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        _useState2$ = _useState2[0],\n        disabled = _useState2$.disabled,\n        title = _useState2$.title,\n        body = _useState2$.body,\n        buttons = _useState2$.buttons,\n        showCloseButton = _useState2$.showCloseButton,\n        showModal = _useState2[1];\n\n  return React.createElement(GameContext.Provider, {\n    value: _objectSpread({}, game, {\n      gameDispatch,\n      showModal\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"game\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Board, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"information\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(ToastProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(ResourceList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"flex flex-col pt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(BankTradeButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"self-center pt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(DiceRoll, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"pb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(BuyCard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(CardList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }))), React.createElement(EndTurn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(GameStatus, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Modal, {\n    disabled: disabled,\n    title: title,\n    body: body,\n    buttons: buttons,\n    showCloseButton: showCloseButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(WinGame, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })));\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/agustina/Descargas/catan/src/components/Game.jsx"],"names":["React","useState","useReducer","useParams","ToastProvider","GameContext","gameReducer","initGameState","GameStatus","Board","CardList","ResourceList","BuyCard","BankTradeButton","DiceRoll","EndTurn","Modal","WinGame","Game","gameId","game","gameDispatch","disabled","title","body","buttons","showCloseButton","showModal"],"mappings":"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","sourcesContent":["import \"../css/game.css\";\nimport React, { useState, useReducer } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { ToastProvider } from \"react-toast-notifications\";\n\nimport GameContext, { gameReducer, initGameState } from \"../GameContext\";\nimport GameStatus from \"./GameStatus\";\nimport Board from \"./Board\";\nimport CardList from \"./CardList\";\nimport ResourceList from \"./ResourceList\";\nimport BuyCard from \"./BuyCard\";\nimport { BankTradeButton } from \"./BankTrade\";\nimport DiceRoll from \"./DiceRoll\";\nimport EndTurn from \"./EndTurn\";\nimport Modal from \"./Modal\";\nimport WinGame from \"./WinGame\";\n\nfunction Game() {\n  // TODO: gameId must be a number. We could use regex /game/:gameId(//d+)\n  const { gameId } = useParams();\n  const [game, gameDispatch] = useReducer(gameReducer, initGameState(gameId));\n  const [\n    { disabled, title, body, buttons, showCloseButton },\n    showModal\n  ] = useState({\n    disabled: true,\n    title: \"\",\n    body: \"\",\n    buttons: [],\n    showCloseButton: true\n  });\n  return (\n    <GameContext.Provider value={{ ...game, gameDispatch, showModal }}>\n      <div className=\"game\">\n        <Board />\n        <div className=\"information\">\n          <ToastProvider>\n            <div className=\"table\">\n              <ResourceList />\n              <div className=\"flex flex-col pt-3\">\n                <BankTradeButton />\n                <div className=\"self-center pt-3\">\n                  <DiceRoll />\n                </div>\n              </div>\n            </div>\n            <div>\n              <div className=\"pb-3\">\n                <BuyCard />\n              </div>\n              <CardList />\n            </div>\n          </ToastProvider>\n          <EndTurn />\n        </div>\n        <GameStatus />\n        <Modal\n          disabled={disabled}\n          title={title}\n          body={body}\n          buttons={buttons}\n          showCloseButton={showCloseButton}\n        />\n        {/* TODO: WinGame should be managed with GameContext phases instead */}\n        <WinGame />\n      </div>\n    </GameContext.Provider>\n  );\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}