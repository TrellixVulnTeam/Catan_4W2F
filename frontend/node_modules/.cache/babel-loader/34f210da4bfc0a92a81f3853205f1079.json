{"ast":null,"code":"var _jsxFileName = \"/home/agustina/Descargas/catan/src/components/Hexagon.jsx\";\nimport React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport V from \"../Vector\";\nimport CatanTypes from \"../CatanTypes\";\nimport api from \"../Api\";\nimport GameContext, { PLAY_KNIGHT, SET_DEFAULT } from \"../GameContext\";\nimport { ReactComponent as BrickIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../public/icons/brick.svg\";\nimport { ReactComponent as WoolIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../public/icons/sheep.svg\";\nimport { ReactComponent as OreIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../public/icons/stone.svg\";\nimport { ReactComponent as LumberIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../public/icons/trees.svg\";\nimport { ReactComponent as GrainIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../public/icons/wheat.svg\";\nimport { ReactComponent as DesertIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../public/icons/desert.svg\";\nimport { ReactComponent as ThiefIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../public/icons/thiefToken.svg\";\n\nfunction Hexagon({\n  position,\n  terrain,\n  token,\n  unit = 256,\n  hasRobber,\n  availableRobberMove,\n  adjacentPlayersToRob\n}) {\n  const _useContext = useContext(GameContext),\n        phase = _useContext.phase,\n        gameId = _useContext.gameId,\n        gameDispatch = _useContext.gameDispatch,\n        showModal = _useContext.showModal;\n\n  const enabled = availableRobberMove; // Point positioning\n\n  const width = Math.sqrt(3) * unit;\n  const radius = unit;\n  const height = 2 * radius;\n  const wunit = width / 2;\n  const hunit = height / 4; // TODO: Make this work for arbitrarily big boards not just up to level 2\n\n  const P = (x, y) => new V(x, y); // shorthand without new\n\n\n  let center;\n\n  if (position.level === 0) {\n    center = V.zero;\n  } else if (position.level === 1) {\n    const levelFirstHexagon = V.rot(P(2 * wunit, 0), -60);\n    center = V.rot(levelFirstHexagon, 60 * position.index);\n  } else if (position.level === 2) {\n    const axis = position.index % 2 ? V.rot(P(4 * wunit, 0), -60) : P(0, 3 * -unit);\n    center = V.rot(axis, 60 * Math.floor(position.index / 2));\n  } else {\n    throw new Error(\"Invalid hexagon position.level\");\n  }\n\n  const ps = [V.add(center, P(0, -unit)), // n\n  V.add(center, P(wunit, -hunit)), // ne\n  V.add(center, P(wunit, hunit)), // se\n  V.add(center, P(0, unit)), // s\n  V.add(center, P(-wunit, hunit)), // sw\n  V.add(center, P(-wunit, -hunit)) // nw\n  ];\n  const points = ps.join(\" \");\n\n  const moveRobber = () => {\n    if (enabled) {\n      const robFrom = async player => {\n        const action = phase === PLAY_KNIGHT ? \"play_knight_card\" : \"move_robber\";\n        await api.games.playAction(gameId, action, {\n          position,\n          player\n        });\n        gameDispatch({\n          type: SET_DEFAULT\n        });\n      };\n\n      const disabled = false;\n      const title = \"Move Robber\";\n      const body = \"Who would you like to take a resource from?\";\n      const buttons = adjacentPlayersToRob.map(player => ({\n        text: player,\n        callback: () => robFrom(player)\n      }));\n      buttons.push({\n        text: \"No One\",\n        callback: () => robFrom(null)\n      });\n      showModal({\n        disabled,\n        title,\n        body,\n        buttons\n      });\n    }\n  }; // Style\n\n\n  const terrainColor = {\n    desert: \"#B7791F\",\n    brick: \"#9B2C2C\",\n    lumber: \"#22543D\",\n    wool: \"#48BB78\",\n    grain: \"#ECC94B\",\n    ore: \"#4A5568\"\n  }[terrain];\n  const terrainIconPos = V.add(center, P(-56.5, -64));\n  const tokenPos = V.add(center, P(0, 128));\n  const tokenTextStyle = {\n    font: \"bold 5rem Cinzel\",\n    fill: \"#2d3748\"\n  };\n  const robberPos = V.add(center, P(-75, -198));\n  const terrainIconColor = {\n    desert: \"#ECC94B\",\n    brick: \"#ED8936\",\n    lumber: \"#48BB78\",\n    wool: \"#22543D\",\n    grain: \"#744210\",\n    ore: \"#A0AEC0\"\n  }[terrain];\n  const terrainIconSize = \"115\";\n  const terrainIcon = {\n    desert: React.createElement(DesertIcon, {\n      x: terrainIconPos.x,\n      y: terrainIconPos.y,\n      width: terrainIconSize,\n      height: terrainIconSize,\n      color: terrainIconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }),\n    brick: React.createElement(BrickIcon, {\n      x: terrainIconPos.x,\n      y: terrainIconPos.y,\n      width: terrainIconSize,\n      height: terrainIconSize,\n      color: terrainIconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }),\n    lumber: React.createElement(LumberIcon, {\n      x: terrainIconPos.x,\n      y: terrainIconPos.y,\n      width: terrainIconSize,\n      height: terrainIconSize,\n      color: terrainIconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }),\n    wool: React.createElement(WoolIcon, {\n      x: terrainIconPos.x,\n      y: terrainIconPos.y,\n      width: terrainIconSize,\n      height: terrainIconSize,\n      color: terrainIconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }),\n    grain: React.createElement(GrainIcon, {\n      x: terrainIconPos.x,\n      y: terrainIconPos.y,\n      width: terrainIconSize,\n      height: terrainIconSize,\n      color: terrainIconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }),\n    ore: React.createElement(OreIcon, {\n      x: terrainIconPos.x,\n      y: terrainIconPos.y,\n      width: terrainIconSize,\n      height: terrainIconSize,\n      color: terrainIconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })\n  }[terrain];\n  return React.createElement(\"g\", {\n    className: \"hexagon \".concat(enabled ? \"can-move-robber\" : \"\"),\n    onClick: moveRobber,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"polygon\", {\n    points: points,\n    fill: terrainColor,\n    stroke: \"white\",\n    strokeWidth: \"1rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }), terrainIcon, React.createElement(\"circle\", {\n    cx: tokenPos.x,\n    cy: tokenPos.y,\n    r: \"55\",\n    fill: \"#e2e8f0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }), (hasRobber || enabled) && React.createElement(ThiefIcon, {\n    x: robberPos.x,\n    y: robberPos.y,\n    fill: \"black\",\n    color: \"black\",\n    width: \"150\",\n    height: \"150\",\n    fillOpacity: hasRobber ? \"1\" : \"0.4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }), React.createElement(\"text\", {\n    x: tokenPos.x,\n    y: tokenPos.y + 6 // HACK: +6 seems to center the sans-serif font\n    ,\n    dominantBaseline: \"middle\",\n    textAnchor: \"middle\",\n    style: tokenTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, token));\n}\n\nHexagon.propTypes = {\n  position: CatanTypes.HexPosition.isRequired,\n  terrain: CatanTypes.Terrain.isRequired,\n  token: PropTypes.number.isRequired,\n  unit: PropTypes.number,\n  hasRobber: PropTypes.bool.isRequired,\n  availableRobberMove: PropTypes.bool.isRequired,\n  adjacentPlayersToRob: PropTypes.arrayOf(PropTypes.string).isRequired\n};\nHexagon.defaultProps = {\n  unit: 256\n};\nexport default Hexagon;","map":{"version":3,"sources":["/home/agustina/Descargas/catan/src/components/Hexagon.jsx"],"names":["React","useContext","PropTypes","V","CatanTypes","api","GameContext","PLAY_KNIGHT","SET_DEFAULT","Hexagon","position","terrain","token","unit","hasRobber","availableRobberMove","adjacentPlayersToRob","phase","gameId","gameDispatch","showModal","enabled","width","Math","sqrt","radius","height","wunit","hunit","P","x","y","center","level","zero","levelFirstHexagon","rot","index","axis","floor","Error","ps","add","points","join","moveRobber","robFrom","player","action","games","playAction","type","disabled","title","body","buttons","map","text","callback","push","terrainColor","desert","brick","lumber","wool","grain","ore","terrainIconPos","tokenPos","tokenTextStyle","font","fill","robberPos","terrainIconColor","terrainIconSize","terrainIcon","propTypes","HexPosition","isRequired","Terrain","number","bool","arrayOf","string","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,CAAP,MAAc,WAAd;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,WAAP,IAAsBC,WAAtB,EAAmCC,WAAnC,QAAsD,gBAAtD;;;;;;;;;AASA,SAASC,OAAT,CAAiB;AACfC,EAAAA,QADe;AAEfC,EAAAA,OAFe;AAGfC,EAAAA,KAHe;AAIfC,EAAAA,IAAI,GAAG,GAJQ;AAKfC,EAAAA,SALe;AAMfC,EAAAA,mBANe;AAOfC,EAAAA;AAPe,CAAjB,EAQG;AAAA,sBACkDf,UAAU,CAACK,WAAD,CAD5D;AAAA,QACOW,KADP,eACOA,KADP;AAAA,QACcC,MADd,eACcA,MADd;AAAA,QACsBC,YADtB,eACsBA,YADtB;AAAA,QACoCC,SADpC,eACoCA,SADpC;;AAED,QAAMC,OAAO,GAAGN,mBAAhB,CAFC,CAGD;;AACA,QAAMO,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAU,CAAV,IAAeX,IAA7B;AACA,QAAMY,MAAM,GAAGZ,IAAf;AACA,QAAMa,MAAM,GAAG,IAAID,MAAnB;AACA,QAAME,KAAK,GAAGL,KAAK,GAAG,CAAtB;AACA,QAAMM,KAAK,GAAGF,MAAM,GAAG,CAAvB,CARC,CAUD;;AACA,QAAMG,CAAC,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU,IAAI5B,CAAJ,CAAM2B,CAAN,EAASC,CAAT,CAApB,CAXC,CAWgC;;;AACjC,MAAIC,MAAJ;;AACA,MAAItB,QAAQ,CAACuB,KAAT,KAAmB,CAAvB,EAA0B;AACxBD,IAAAA,MAAM,GAAG7B,CAAC,CAAC+B,IAAX;AACD,GAFD,MAEO,IAAIxB,QAAQ,CAACuB,KAAT,KAAmB,CAAvB,EAA0B;AAC/B,UAAME,iBAAiB,GAAGhC,CAAC,CAACiC,GAAF,CAAMP,CAAC,CAAC,IAAIF,KAAL,EAAY,CAAZ,CAAP,EAAuB,CAAC,EAAxB,CAA1B;AACAK,IAAAA,MAAM,GAAG7B,CAAC,CAACiC,GAAF,CAAMD,iBAAN,EAAyB,KAAKzB,QAAQ,CAAC2B,KAAvC,CAAT;AACD,GAHM,MAGA,IAAI3B,QAAQ,CAACuB,KAAT,KAAmB,CAAvB,EAA0B;AAC/B,UAAMK,IAAI,GACR5B,QAAQ,CAAC2B,KAAT,GAAiB,CAAjB,GAAqBlC,CAAC,CAACiC,GAAF,CAAMP,CAAC,CAAC,IAAIF,KAAL,EAAY,CAAZ,CAAP,EAAuB,CAAC,EAAxB,CAArB,GAAmDE,CAAC,CAAC,CAAD,EAAI,IAAI,CAAChB,IAAT,CADtD;AAEAmB,IAAAA,MAAM,GAAG7B,CAAC,CAACiC,GAAF,CAAME,IAAN,EAAY,KAAKf,IAAI,CAACgB,KAAL,CAAW7B,QAAQ,CAAC2B,KAAT,GAAiB,CAA5B,CAAjB,CAAT;AACD,GAJM,MAIA;AACL,UAAM,IAAIG,KAAJ,CAAU,gCAAV,CAAN;AACD;;AACD,QAAMC,EAAE,GAAG,CACTtC,CAAC,CAACuC,GAAF,CAAMV,MAAN,EAAcH,CAAC,CAAC,CAAD,EAAI,CAAChB,IAAL,CAAf,CADS,EACmB;AAC5BV,EAAAA,CAAC,CAACuC,GAAF,CAAMV,MAAN,EAAcH,CAAC,CAACF,KAAD,EAAQ,CAACC,KAAT,CAAf,CAFS,EAEwB;AACjCzB,EAAAA,CAAC,CAACuC,GAAF,CAAMV,MAAN,EAAcH,CAAC,CAACF,KAAD,EAAQC,KAAR,CAAf,CAHS,EAGuB;AAChCzB,EAAAA,CAAC,CAACuC,GAAF,CAAMV,MAAN,EAAcH,CAAC,CAAC,CAAD,EAAIhB,IAAJ,CAAf,CAJS,EAIkB;AAC3BV,EAAAA,CAAC,CAACuC,GAAF,CAAMV,MAAN,EAAcH,CAAC,CAAC,CAACF,KAAF,EAASC,KAAT,CAAf,CALS,EAKwB;AACjCzB,EAAAA,CAAC,CAACuC,GAAF,CAAMV,MAAN,EAAcH,CAAC,CAAC,CAACF,KAAF,EAAS,CAACC,KAAV,CAAf,CANS,CAMwB;AANxB,GAAX;AAQA,QAAMe,MAAM,GAAGF,EAAE,CAACG,IAAH,CAAQ,GAAR,CAAf;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACvB,QAAIxB,OAAJ,EAAa;AACX,YAAMyB,OAAO,GAAG,MAAMC,MAAN,IAAgB;AAC9B,cAAMC,MAAM,GACV/B,KAAK,KAAKV,WAAV,GAAwB,kBAAxB,GAA6C,aAD/C;AAEA,cAAMF,GAAG,CAAC4C,KAAJ,CAAUC,UAAV,CAAqBhC,MAArB,EAA6B8B,MAA7B,EAAqC;AAAEtC,UAAAA,QAAF;AAAYqC,UAAAA;AAAZ,SAArC,CAAN;AACA5B,QAAAA,YAAY,CAAC;AAAEgC,UAAAA,IAAI,EAAE3C;AAAR,SAAD,CAAZ;AACD,OALD;;AAMA,YAAM4C,QAAQ,GAAG,KAAjB;AACA,YAAMC,KAAK,GAAG,aAAd;AACA,YAAMC,IAAI,GAAG,6CAAb;AACA,YAAMC,OAAO,GAAGvC,oBAAoB,CAACwC,GAArB,CAAyBT,MAAM,KAAK;AAClDU,QAAAA,IAAI,EAAEV,MAD4C;AAElDW,QAAAA,QAAQ,EAAE,MAAMZ,OAAO,CAACC,MAAD;AAF2B,OAAL,CAA/B,CAAhB;AAIAQ,MAAAA,OAAO,CAACI,IAAR,CAAa;AAAEF,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,QAAQ,EAAE,MAAMZ,OAAO,CAAC,IAAD;AAAzC,OAAb;AACA1B,MAAAA,SAAS,CAAC;AAAEgC,QAAAA,QAAF;AAAYC,QAAAA,KAAZ;AAAmBC,QAAAA,IAAnB;AAAyBC,QAAAA;AAAzB,OAAD,CAAT;AACD;AACF,GAlBD,CAnCC,CAuDD;;;AACA,QAAMK,YAAY,GAAG;AACnBC,IAAAA,MAAM,EAAE,SADW;AAEnBC,IAAAA,KAAK,EAAE,SAFY;AAGnBC,IAAAA,MAAM,EAAE,SAHW;AAInBC,IAAAA,IAAI,EAAE,SAJa;AAKnBC,IAAAA,KAAK,EAAE,SALY;AAMnBC,IAAAA,GAAG,EAAE;AANc,IAOnBvD,OAPmB,CAArB;AASA,QAAMwD,cAAc,GAAGhE,CAAC,CAACuC,GAAF,CAAMV,MAAN,EAAcH,CAAC,CAAC,CAAC,IAAF,EAAQ,CAAC,EAAT,CAAf,CAAvB;AACA,QAAMuC,QAAQ,GAAGjE,CAAC,CAACuC,GAAF,CAAMV,MAAN,EAAcH,CAAC,CAAC,CAAD,EAAI,GAAJ,CAAf,CAAjB;AACA,QAAMwC,cAAc,GAAG;AAAEC,IAAAA,IAAI,EAAE,kBAAR;AAA4BC,IAAAA,IAAI,EAAE;AAAlC,GAAvB;AACA,QAAMC,SAAS,GAAGrE,CAAC,CAACuC,GAAF,CAAMV,MAAN,EAAcH,CAAC,CAAC,CAAC,EAAF,EAAM,CAAC,GAAP,CAAf,CAAlB;AAEA,QAAM4C,gBAAgB,GAAG;AACvBZ,IAAAA,MAAM,EAAE,SADe;AAEvBC,IAAAA,KAAK,EAAE,SAFgB;AAGvBC,IAAAA,MAAM,EAAE,SAHe;AAIvBC,IAAAA,IAAI,EAAE,SAJiB;AAKvBC,IAAAA,KAAK,EAAE,SALgB;AAMvBC,IAAAA,GAAG,EAAE;AANkB,IAOvBvD,OAPuB,CAAzB;AAQA,QAAM+D,eAAe,GAAG,KAAxB;AAEA,QAAMC,WAAW,GAAG;AAClBd,IAAAA,MAAM,EACJ,oBAAC,UAAD;AACE,MAAA,CAAC,EAAEM,cAAc,CAACrC,CADpB;AAEE,MAAA,CAAC,EAAEqC,cAAc,CAACpC,CAFpB;AAGE,MAAA,KAAK,EAAE2C,eAHT;AAIE,MAAA,MAAM,EAAEA,eAJV;AAKE,MAAA,KAAK,EAAED,gBALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFgB;AAUlBX,IAAAA,KAAK,EACH,oBAAC,SAAD;AACE,MAAA,CAAC,EAAEK,cAAc,CAACrC,CADpB;AAEE,MAAA,CAAC,EAAEqC,cAAc,CAACpC,CAFpB;AAGE,MAAA,KAAK,EAAE2C,eAHT;AAIE,MAAA,MAAM,EAAEA,eAJV;AAKE,MAAA,KAAK,EAAED,gBALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXgB;AAmBlBV,IAAAA,MAAM,EACJ,oBAAC,UAAD;AACE,MAAA,CAAC,EAAEI,cAAc,CAACrC,CADpB;AAEE,MAAA,CAAC,EAAEqC,cAAc,CAACpC,CAFpB;AAGE,MAAA,KAAK,EAAE2C,eAHT;AAIE,MAAA,MAAM,EAAEA,eAJV;AAKE,MAAA,KAAK,EAAED,gBALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBgB;AA4BlBT,IAAAA,IAAI,EACF,oBAAC,QAAD;AACE,MAAA,CAAC,EAAEG,cAAc,CAACrC,CADpB;AAEE,MAAA,CAAC,EAAEqC,cAAc,CAACpC,CAFpB;AAGE,MAAA,KAAK,EAAE2C,eAHT;AAIE,MAAA,MAAM,EAAEA,eAJV;AAKE,MAAA,KAAK,EAAED,gBALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7BgB;AAqClBR,IAAAA,KAAK,EACH,oBAAC,SAAD;AACE,MAAA,CAAC,EAAEE,cAAc,CAACrC,CADpB;AAEE,MAAA,CAAC,EAAEqC,cAAc,CAACpC,CAFpB;AAGE,MAAA,KAAK,EAAE2C,eAHT;AAIE,MAAA,MAAM,EAAEA,eAJV;AAKE,MAAA,KAAK,EAAED,gBALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtCgB;AA8ClBP,IAAAA,GAAG,EACD,oBAAC,OAAD;AACE,MAAA,CAAC,EAAEC,cAAc,CAACrC,CADpB;AAEE,MAAA,CAAC,EAAEqC,cAAc,CAACpC,CAFpB;AAGE,MAAA,KAAK,EAAE2C,eAHT;AAIE,MAAA,MAAM,EAAEA,eAJV;AAKE,MAAA,KAAK,EAAED,gBALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA/CgB,IAuDlB9D,OAvDkB,CAApB;AAyDA,SACE;AACE,IAAA,SAAS,oBAAaU,OAAO,GAAG,iBAAH,GAAuB,EAA3C,CADX;AAEE,IAAA,OAAO,EAAEwB,UAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AACE,IAAA,MAAM,EAAEF,MADV;AAEE,IAAA,IAAI,EAAEiB,YAFR;AAGE,IAAA,MAAM,EAAC,OAHT;AAIE,IAAA,WAAW,EAAC,MAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAUGe,WAVH,EAWE;AAAQ,IAAA,EAAE,EAAEP,QAAQ,CAACtC,CAArB;AAAwB,IAAA,EAAE,EAAEsC,QAAQ,CAACrC,CAArC;AAAwC,IAAA,CAAC,EAAC,IAA1C;AAA+C,IAAA,IAAI,EAAC,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAYG,CAACjB,SAAS,IAAIO,OAAd,KACC,oBAAC,SAAD;AACE,IAAA,CAAC,EAAEmD,SAAS,CAAC1C,CADf;AAEE,IAAA,CAAC,EAAE0C,SAAS,CAACzC,CAFf;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAC,OAJR;AAKE,IAAA,KAAK,EAAC,KALR;AAME,IAAA,MAAM,EAAC,KANT;AAOE,IAAA,WAAW,EAAEjB,SAAS,GAAG,GAAH,GAAS,KAPjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,EAuBE;AACE,IAAA,CAAC,EAAEsD,QAAQ,CAACtC,CADd;AAEE,IAAA,CAAC,EAAEsC,QAAQ,CAACrC,CAAT,GAAa,CAFlB,CAEqB;AAFrB;AAGE,IAAA,gBAAgB,EAAC,QAHnB;AAIE,IAAA,UAAU,EAAC,QAJb;AAKE,IAAA,KAAK,EAAEsC,cALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGzD,KAPH,CAvBF,CADF;AAmCD;;AAEDH,OAAO,CAACmE,SAAR,GAAoB;AAClBlE,EAAAA,QAAQ,EAAEN,UAAU,CAACyE,WAAX,CAAuBC,UADf;AAElBnE,EAAAA,OAAO,EAAEP,UAAU,CAAC2E,OAAX,CAAmBD,UAFV;AAGlBlE,EAAAA,KAAK,EAAEV,SAAS,CAAC8E,MAAV,CAAiBF,UAHN;AAIlBjE,EAAAA,IAAI,EAAEX,SAAS,CAAC8E,MAJE;AAKlBlE,EAAAA,SAAS,EAAEZ,SAAS,CAAC+E,IAAV,CAAeH,UALR;AAMlB/D,EAAAA,mBAAmB,EAAEb,SAAS,CAAC+E,IAAV,CAAeH,UANlB;AAOlB9D,EAAAA,oBAAoB,EAAEd,SAAS,CAACgF,OAAV,CAAkBhF,SAAS,CAACiF,MAA5B,EAAoCL;AAPxC,CAApB;AAUArE,OAAO,CAAC2E,YAAR,GAAuB;AACrBvE,EAAAA,IAAI,EAAE;AADe,CAAvB;AAIA,eAAeJ,OAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport V from \"../Vector\";\nimport CatanTypes from \"../CatanTypes\";\nimport api from \"../Api\";\nimport GameContext, { PLAY_KNIGHT, SET_DEFAULT } from \"../GameContext\";\nimport { ReactComponent as BrickIcon } from \"../public/icons/brick.svg\";\nimport { ReactComponent as WoolIcon } from \"../public/icons/sheep.svg\";\nimport { ReactComponent as OreIcon } from \"../public/icons/stone.svg\";\nimport { ReactComponent as LumberIcon } from \"../public/icons/trees.svg\";\nimport { ReactComponent as GrainIcon } from \"../public/icons/wheat.svg\";\nimport { ReactComponent as DesertIcon } from \"../public/icons/desert.svg\";\nimport { ReactComponent as ThiefIcon } from \"../public/icons/thiefToken.svg\";\n\nfunction Hexagon({\n  position,\n  terrain,\n  token,\n  unit = 256,\n  hasRobber,\n  availableRobberMove,\n  adjacentPlayersToRob\n}) {\n  const { phase, gameId, gameDispatch, showModal } = useContext(GameContext);\n  const enabled = availableRobberMove;\n  // Point positioning\n  const width = Math.sqrt(3) * unit;\n  const radius = unit;\n  const height = 2 * radius;\n  const wunit = width / 2;\n  const hunit = height / 4;\n\n  // TODO: Make this work for arbitrarily big boards not just up to level 2\n  const P = (x, y) => new V(x, y); // shorthand without new\n  let center;\n  if (position.level === 0) {\n    center = V.zero;\n  } else if (position.level === 1) {\n    const levelFirstHexagon = V.rot(P(2 * wunit, 0), -60);\n    center = V.rot(levelFirstHexagon, 60 * position.index);\n  } else if (position.level === 2) {\n    const axis =\n      position.index % 2 ? V.rot(P(4 * wunit, 0), -60) : P(0, 3 * -unit);\n    center = V.rot(axis, 60 * Math.floor(position.index / 2));\n  } else {\n    throw new Error(\"Invalid hexagon position.level\");\n  }\n  const ps = [\n    V.add(center, P(0, -unit)), // n\n    V.add(center, P(wunit, -hunit)), // ne\n    V.add(center, P(wunit, hunit)), // se\n    V.add(center, P(0, unit)), // s\n    V.add(center, P(-wunit, hunit)), // sw\n    V.add(center, P(-wunit, -hunit)) // nw\n  ];\n  const points = ps.join(\" \");\n\n  const moveRobber = () => {\n    if (enabled) {\n      const robFrom = async player => {\n        const action =\n          phase === PLAY_KNIGHT ? \"play_knight_card\" : \"move_robber\";\n        await api.games.playAction(gameId, action, { position, player });\n        gameDispatch({ type: SET_DEFAULT });\n      };\n      const disabled = false;\n      const title = \"Move Robber\";\n      const body = \"Who would you like to take a resource from?\";\n      const buttons = adjacentPlayersToRob.map(player => ({\n        text: player,\n        callback: () => robFrom(player)\n      }));\n      buttons.push({ text: \"No One\", callback: () => robFrom(null) });\n      showModal({ disabled, title, body, buttons });\n    }\n  };\n\n  // Style\n  const terrainColor = {\n    desert: \"#B7791F\",\n    brick: \"#9B2C2C\",\n    lumber: \"#22543D\",\n    wool: \"#48BB78\",\n    grain: \"#ECC94B\",\n    ore: \"#4A5568\"\n  }[terrain];\n\n  const terrainIconPos = V.add(center, P(-56.5, -64));\n  const tokenPos = V.add(center, P(0, 128));\n  const tokenTextStyle = { font: \"bold 5rem Cinzel\", fill: \"#2d3748\" };\n  const robberPos = V.add(center, P(-75, -198));\n\n  const terrainIconColor = {\n    desert: \"#ECC94B\",\n    brick: \"#ED8936\",\n    lumber: \"#48BB78\",\n    wool: \"#22543D\",\n    grain: \"#744210\",\n    ore: \"#A0AEC0\"\n  }[terrain];\n  const terrainIconSize = \"115\";\n\n  const terrainIcon = {\n    desert: (\n      <DesertIcon\n        x={terrainIconPos.x}\n        y={terrainIconPos.y}\n        width={terrainIconSize}\n        height={terrainIconSize}\n        color={terrainIconColor}\n      />\n    ),\n    brick: (\n      <BrickIcon\n        x={terrainIconPos.x}\n        y={terrainIconPos.y}\n        width={terrainIconSize}\n        height={terrainIconSize}\n        color={terrainIconColor}\n      />\n    ),\n    lumber: (\n      <LumberIcon\n        x={terrainIconPos.x}\n        y={terrainIconPos.y}\n        width={terrainIconSize}\n        height={terrainIconSize}\n        color={terrainIconColor}\n      />\n    ),\n    wool: (\n      <WoolIcon\n        x={terrainIconPos.x}\n        y={terrainIconPos.y}\n        width={terrainIconSize}\n        height={terrainIconSize}\n        color={terrainIconColor}\n      />\n    ),\n    grain: (\n      <GrainIcon\n        x={terrainIconPos.x}\n        y={terrainIconPos.y}\n        width={terrainIconSize}\n        height={terrainIconSize}\n        color={terrainIconColor}\n      />\n    ),\n    ore: (\n      <OreIcon\n        x={terrainIconPos.x}\n        y={terrainIconPos.y}\n        width={terrainIconSize}\n        height={terrainIconSize}\n        color={terrainIconColor}\n      />\n    )\n  }[terrain];\n\n  return (\n    <g\n      className={`hexagon ${enabled ? \"can-move-robber\" : \"\"}`}\n      onClick={moveRobber}\n    >\n      <polygon\n        points={points}\n        fill={terrainColor}\n        stroke=\"white\"\n        strokeWidth=\"1rem\"\n      />\n      {terrainIcon}\n      <circle cx={tokenPos.x} cy={tokenPos.y} r=\"55\" fill=\"#e2e8f0\" />\n      {(hasRobber || enabled) && (\n        <ThiefIcon\n          x={robberPos.x}\n          y={robberPos.y}\n          fill=\"black\"\n          color=\"black\"\n          width=\"150\"\n          height=\"150\"\n          fillOpacity={hasRobber ? \"1\" : \"0.4\"}\n        />\n      )}\n      <text\n        x={tokenPos.x}\n        y={tokenPos.y + 6} // HACK: +6 seems to center the sans-serif font\n        dominantBaseline=\"middle\"\n        textAnchor=\"middle\"\n        style={tokenTextStyle}\n      >\n        {token}\n      </text>\n    </g>\n  );\n}\n\nHexagon.propTypes = {\n  position: CatanTypes.HexPosition.isRequired,\n  terrain: CatanTypes.Terrain.isRequired,\n  token: PropTypes.number.isRequired,\n  unit: PropTypes.number,\n  hasRobber: PropTypes.bool.isRequired,\n  availableRobberMove: PropTypes.bool.isRequired,\n  adjacentPlayersToRob: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nHexagon.defaultProps = {\n  unit: 256\n};\n\nexport default Hexagon;\n"]},"metadata":{},"sourceType":"module"}