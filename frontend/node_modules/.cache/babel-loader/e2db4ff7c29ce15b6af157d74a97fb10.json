{"ast":null,"code":"import _defineProperty from \"/home/agustina/Descargas/catan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createContext } from \"react\"; // game action types\n\nexport const SET_DEFAULT = \"SET_DEFAULT\";\nexport const SET_PLAY_KNIGHT = \"SET_PLAY_KNIGHT\";\nexport const SET_PLAY_ROAD_BUILDING = \"SET_PLAY_ROAD_BUILDING\"; // game phases\n\nexport const DEFAULT = \"DEFAULT\";\nexport const PLAY_KNIGHT = \"PLAY_KNIGHT\";\nexport const PLAY_ROAD_BUILDING = \"PLAY_ROAD_BUILDING\";\nexport const ADD_ROAD_PLAY_ROAD_BUILDING = \"ADD_ROAD_PLAY_ROAD_BUILDING\"; // TODO: EXPECTATING\n// TODO: FINISHED\n// TODO: INVALID_GAME_ID\n\nexport const initGameState = gameId => ({\n  phase: DEFAULT,\n  gameId\n});\nconst GameContext = createContext();\nexport function gameReducer(state, action) {\n  switch (action.type) {\n    case SET_DEFAULT:\n      return _objectSpread({}, state, {\n        phase: DEFAULT\n      });\n\n    case SET_PLAY_KNIGHT:\n      return _objectSpread({}, state, {\n        phase: PLAY_KNIGHT\n      });\n\n    case SET_PLAY_ROAD_BUILDING:\n      return _objectSpread({}, state, {\n        phase: PLAY_ROAD_BUILDING,\n        roads: []\n      });\n\n    case ADD_ROAD_PLAY_ROAD_BUILDING:\n      {\n        // Assumes state.roads and action.road exists and are CatanTypes.Road\n        let roads;\n\n        if (state.roads.length < 2) {\n          roads = state.roads.concat([action.road]);\n        } else {\n          // enqueue new road as fifo\n          roads = [...state.roads];\n          roads.push(action.road);\n          roads.shift();\n        }\n\n        return _objectSpread({}, state, {\n          roads\n        });\n      }\n\n    default:\n      throw Error(\"Invalid action.type === \".concat(action.type, \" for gameReducer\"));\n  }\n}\nexport default GameContext;","map":{"version":3,"sources":["/home/agustina/Descargas/catan/src/GameContext.js"],"names":["createContext","SET_DEFAULT","SET_PLAY_KNIGHT","SET_PLAY_ROAD_BUILDING","DEFAULT","PLAY_KNIGHT","PLAY_ROAD_BUILDING","ADD_ROAD_PLAY_ROAD_BUILDING","initGameState","gameId","phase","GameContext","gameReducer","state","action","type","roads","length","concat","road","push","shift","Error"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAA8B,OAA9B,C,CAEA;;AACA,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B,C,CAEP;;AACA,OAAO,MAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,2BAA2B,GAAG,6BAApC,C,CACP;AACA;AACA;;AAEA,OAAO,MAAMC,aAAa,GAAGC,MAAM,KAAK;AAAEC,EAAAA,KAAK,EAAEN,OAAT;AAAkBK,EAAAA;AAAlB,CAAL,CAA5B;AAEP,MAAME,WAAW,GAAGX,aAAa,EAAjC;AAEA,OAAO,SAASY,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AACzC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,WAAL;AACE,+BAAYY,KAAZ;AAAmBH,QAAAA,KAAK,EAAEN;AAA1B;;AACF,SAAKF,eAAL;AACE,+BAAYW,KAAZ;AAAmBH,QAAAA,KAAK,EAAEL;AAA1B;;AACF,SAAKF,sBAAL;AACE,+BAAYU,KAAZ;AAAmBH,QAAAA,KAAK,EAAEJ,kBAA1B;AAA8CU,QAAAA,KAAK,EAAE;AAArD;;AACF,SAAKT,2BAAL;AAAkC;AAChC;AACA,YAAIS,KAAJ;;AACA,YAAIH,KAAK,CAACG,KAAN,CAAYC,MAAZ,GAAqB,CAAzB,EAA4B;AAC1BD,UAAAA,KAAK,GAAGH,KAAK,CAACG,KAAN,CAAYE,MAAZ,CAAmB,CAACJ,MAAM,CAACK,IAAR,CAAnB,CAAR;AACD,SAFD,MAEO;AACL;AACAH,UAAAA,KAAK,GAAG,CAAC,GAAGH,KAAK,CAACG,KAAV,CAAR;AACAA,UAAAA,KAAK,CAACI,IAAN,CAAWN,MAAM,CAACK,IAAlB;AACAH,UAAAA,KAAK,CAACK,KAAN;AACD;;AACD,iCAAYR,KAAZ;AAAmBG,UAAAA;AAAnB;AACD;;AACD;AACE,YAAMM,KAAK,mCAA4BR,MAAM,CAACC,IAAnC,sBAAX;AArBJ;AAuBD;AAED,eAAeJ,WAAf","sourcesContent":["import { createContext } from \"react\";\n\n// game action types\nexport const SET_DEFAULT = \"SET_DEFAULT\";\nexport const SET_PLAY_KNIGHT = \"SET_PLAY_KNIGHT\";\nexport const SET_PLAY_ROAD_BUILDING = \"SET_PLAY_ROAD_BUILDING\";\n\n// game phases\nexport const DEFAULT = \"DEFAULT\";\nexport const PLAY_KNIGHT = \"PLAY_KNIGHT\";\nexport const PLAY_ROAD_BUILDING = \"PLAY_ROAD_BUILDING\";\nexport const ADD_ROAD_PLAY_ROAD_BUILDING = \"ADD_ROAD_PLAY_ROAD_BUILDING\";\n// TODO: EXPECTATING\n// TODO: FINISHED\n// TODO: INVALID_GAME_ID\n\nexport const initGameState = gameId => ({ phase: DEFAULT, gameId });\n\nconst GameContext = createContext();\n\nexport function gameReducer(state, action) {\n  switch (action.type) {\n    case SET_DEFAULT:\n      return { ...state, phase: DEFAULT };\n    case SET_PLAY_KNIGHT:\n      return { ...state, phase: PLAY_KNIGHT };\n    case SET_PLAY_ROAD_BUILDING:\n      return { ...state, phase: PLAY_ROAD_BUILDING, roads: [] };\n    case ADD_ROAD_PLAY_ROAD_BUILDING: {\n      // Assumes state.roads and action.road exists and are CatanTypes.Road\n      let roads;\n      if (state.roads.length < 2) {\n        roads = state.roads.concat([action.road]);\n      } else {\n        // enqueue new road as fifo\n        roads = [...state.roads];\n        roads.push(action.road);\n        roads.shift();\n      }\n      return { ...state, roads };\n    }\n    default:\n      throw Error(`Invalid action.type === ${action.type} for gameReducer`);\n  }\n}\n\nexport default GameContext;\n"]},"metadata":{},"sourceType":"module"}