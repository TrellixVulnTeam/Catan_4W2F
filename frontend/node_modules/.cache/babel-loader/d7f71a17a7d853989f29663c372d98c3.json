{"ast":null,"code":"var _jsxFileName = \"/home/agustina/Descargas/catan/src/components/Road.jsx\";\nimport React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\nimport CatanTypes from \"../CatanTypes\";\nimport getVertex from \"../Vertex\";\nimport api from \"../Api\";\nimport GameContext, { DEFAULT, PLAY_ROAD_BUILDING, ADD_ROAD_PLAY_ROAD_BUILDING } from \"../GameContext\";\nexport default function Road({\n  vertices: [v, w],\n  colour,\n  username,\n  unit = 256\n}) {\n  const vmap = getVertex(v.level, v.index, unit);\n  const wmap = getVertex(w.level, w.index, unit);\n  return React.createElement(\"line\", {\n    className: \"road\",\n    x1: vmap.x,\n    y1: vmap.y,\n    x2: wmap.x,\n    y2: wmap.y,\n    stroke: colour,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  });\n}\nRoad.propTypes = {\n  vertices: CatanTypes.RoadPosition.isRequired,\n  colour: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n  unit: PropTypes.number // eslint-disable-line react/require-default-props\n\n};\nexport function BuildRoadIndicator({\n  vertices: [v, w],\n  unit = 256\n}) {\n  const _useContext = useContext(GameContext),\n        phase = _useContext.phase,\n        gameId = _useContext.gameId,\n        roads = _useContext.roads,\n        gameDispatch = _useContext.gameDispatch,\n        showModal = _useContext.showModal;\n\n  const validPhase = [DEFAULT, PLAY_ROAD_BUILDING].includes(phase);\n  const enabled = validPhase; // If PLAY_ROAD_BUILDING, check that roads has this road\n\n  const isSelectedByRoadBuilding = phase === PLAY_ROAD_BUILDING && _.differenceWith(roads, [[v, w]], _.isEqual).length < roads.length;\n\n  const doBuild = () => {\n    if (phase === DEFAULT) {\n      const disabled = false;\n      const title = \"Build Road\";\n      const body = \"It will cost you 1 brick and 1 lumber. Are you sure you want to build it?\";\n      const buttons = [{\n        text: \"Accept\",\n        primary: true,\n        callback: () => api.games.playAction(gameId, \"build_road\", [v, w])\n      }, {\n        text: \"Cancel\"\n      }];\n      showModal({\n        disabled,\n        title,\n        body,\n        buttons\n      });\n    } else if (phase === PLAY_ROAD_BUILDING && !isSelectedByRoadBuilding) {\n      gameDispatch({\n        type: ADD_ROAD_PLAY_ROAD_BUILDING,\n        road: [v, w]\n      });\n    }\n  };\n\n  const vmap = getVertex(v.level, v.index, unit);\n  const wmap = getVertex(w.level, w.index, unit);\n  return React.createElement(\"line\", {\n    className: \"\\n        build-road-indicator\\n        \".concat(enabled ? \"\" : \"disabled\", \"\\n        \").concat(isSelectedByRoadBuilding ? \"road-building-selected\" : \"\", \"\\n      \"),\n    onClick: doBuild,\n    x1: vmap.x,\n    y1: vmap.y,\n    x2: wmap.x,\n    y2: wmap.y,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  });\n}\nBuildRoadIndicator.propTypes = {\n  vertices: CatanTypes.RoadPosition.isRequired,\n  unit: PropTypes.number // eslint-disable-line react/require-default-props\n\n};","map":{"version":3,"sources":["/home/agustina/Descargas/catan/src/components/Road.jsx"],"names":["React","useContext","PropTypes","_","CatanTypes","getVertex","api","GameContext","DEFAULT","PLAY_ROAD_BUILDING","ADD_ROAD_PLAY_ROAD_BUILDING","Road","vertices","v","w","colour","username","unit","vmap","level","index","wmap","x","y","propTypes","RoadPosition","isRequired","string","number","BuildRoadIndicator","phase","gameId","roads","gameDispatch","showModal","validPhase","includes","enabled","isSelectedByRoadBuilding","differenceWith","isEqual","length","doBuild","disabled","title","body","buttons","text","primary","callback","games","playAction","type","road"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nimport CatanTypes from \"../CatanTypes\";\nimport getVertex from \"../Vertex\";\nimport api from \"../Api\";\nimport GameContext, {\n  DEFAULT,\n  PLAY_ROAD_BUILDING,\n  ADD_ROAD_PLAY_ROAD_BUILDING\n} from \"../GameContext\";\n\nexport default function Road({\n  vertices: [v, w],\n  colour,\n  username,\n  unit = 256\n}) {\n  const vmap = getVertex(v.level, v.index, unit);\n  const wmap = getVertex(w.level, w.index, unit);\n  return (\n    <line\n      className=\"road\"\n      x1={vmap.x}\n      y1={vmap.y}\n      x2={wmap.x}\n      y2={wmap.y}\n      stroke={colour}\n    />\n  );\n}\n\nRoad.propTypes = {\n  vertices: CatanTypes.RoadPosition.isRequired,\n  colour: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n  unit: PropTypes.number // eslint-disable-line react/require-default-props\n};\n\nexport function BuildRoadIndicator({ vertices: [v, w], unit = 256 }) {\n  const { phase, gameId, roads, gameDispatch, showModal } = useContext(\n    GameContext\n  );\n  const validPhase = [DEFAULT, PLAY_ROAD_BUILDING].includes(phase);\n  const enabled = validPhase;\n\n  // If PLAY_ROAD_BUILDING, check that roads has this road\n  const isSelectedByRoadBuilding =\n    phase === PLAY_ROAD_BUILDING &&\n    _.differenceWith(roads, [[v, w]], _.isEqual).length < roads.length;\n\n  const doBuild = () => {\n    if (phase === DEFAULT) {\n      const disabled = false;\n      const title = \"Build Road\";\n      const body =\n        \"It will cost you 1 brick and 1 lumber. Are you sure you want to build it?\";\n      const buttons = [\n        {\n          text: \"Accept\",\n          primary: true,\n          callback: () => api.games.playAction(gameId, \"build_road\", [v, w])\n        },\n        {\n          text: \"Cancel\"\n        }\n      ];\n      showModal({ disabled, title, body, buttons });\n    } else if (phase === PLAY_ROAD_BUILDING && !isSelectedByRoadBuilding) {\n      gameDispatch({ type: ADD_ROAD_PLAY_ROAD_BUILDING, road: [v, w] });\n    }\n  };\n  const vmap = getVertex(v.level, v.index, unit);\n  const wmap = getVertex(w.level, w.index, unit);\n  return (\n    <line\n      className={`\n        build-road-indicator\n        ${enabled ? \"\" : \"disabled\"}\n        ${isSelectedByRoadBuilding ? \"road-building-selected\" : \"\"}\n      `}\n      onClick={doBuild}\n      x1={vmap.x}\n      y1={vmap.y}\n      x2={wmap.x}\n      y2={wmap.y}\n    />\n  );\n}\n\nBuildRoadIndicator.propTypes = {\n  vertices: CatanTypes.RoadPosition.isRequired,\n  unit: PropTypes.number // eslint-disable-line react/require-default-props\n};\n"]},"metadata":{},"sourceType":"module"}